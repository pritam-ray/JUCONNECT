var _=Object.defineProperty;var f=(t,e,r)=>e in t?_(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var u=(t,e,r)=>f(t,typeof e!="symbol"?e+"":e,r);import{l,s}from"./index-CRFTvyLH.js";import"./vendor-DNJA2DLw.js";import"./supabase-IaWL2ZTc.js";import"./ui-D7eTlwbA.js";class g{constructor(){u(this,"errorCounts",new Map);u(this,"maxErrorsPerMinute",10);u(this,"windowMs",60*1e3)}shouldLogError(e){const r=Date.now(),a=this.errorCounts.get(e);return!a||r>a.resetTime?(this.errorCounts.set(e,{count:1,resetTime:r+this.windowMs}),!0):a.count<this.maxErrorsPerMinute?(a.count++,!0):!1}cleanup(){const e=Date.now();for(const[r,a]of this.errorCounts.entries())e>a.resetTime&&this.errorCounts.delete(r)}}const d=new g;typeof window<"u"&&setInterval(()=>{d.cleanup()},300*1e3);const E={async logActivity(t,e,r={},a,o){try{if(!s)return l.warn("Supabase not available, activity not logged"),null;const{data:n,error:i}=await s.rpc("log_user_activity",{p_user_id:t,p_activity_type:e,p_activity_data:r,p_ip_address:a||void 0,p_user_agent:o||void 0});return i?(l.error("Failed to log activity:",i),null):n}catch(n){return l.error("Error in activity logging:",n),null}},async getUserActivity(t,e=50){try{if(!s)return[];const{data:r,error:a}=await s.from("user_activity_logs").select("*").eq("user_id",t).order("created_at",{ascending:!1}).limit(e);if(a)throw a;return(r||[]).filter(o=>o.user_id!=null).map(o=>({...o,user_id:o.user_id,activity_data:o.activity_data||{}}))}catch(r){return l.error("Error fetching user activity:",r),[]}}},p={async logError(t,e="unknown",r="",a,o={},n="error"){try{if(!s)return console.error("Supabase not available for error logging:",r),null;const{data:i,error:c}=await s.rpc("log_error",{p_user_id:t||void 0,p_error_type:e,p_error_message:r,p_error_stack:a||void 0,p_context:o,p_severity:n});return c?(console.error("Failed to log error to database:",c),null):i}catch(i){return console.error("Error in error logging service:",i),null}},async getErrorLogs(t,e=20){try{if(!s)return[];const{data:r,error:a}=await s.from("error_logs").select("*").eq("user_id",t).order("created_at",{ascending:!1}).limit(e);if(a)throw a;return(r||[]).filter(o=>o.user_id!=null).map(o=>({...o,user_id:o.user_id,error_type:o.error_type,severity:o.severity||"error",resolved:o.resolved||!1,context:o.context||{}}))}catch(r){return l.error("Error fetching error logs:",r),[]}},async markErrorResolved(t){try{if(!s)return!1;const{error:e}=await s.from("error_logs").update({resolved:!0}).eq("id",t);return!e}catch(e){return l.error("Error marking error as resolved:",e),!1}}},k={async createUploadSession(t,e,r,a){try{if(!s)return null;if(r>5242880)throw new Error("Please upload a file or PDF smaller than 5MB");const{data:o,error:n}=await s.from("file_upload_sessions").insert({user_id:t,file_name:e,file_size:r,file_type:a,upload_status:"pending"}).select().single();if(n)throw n;return o&&o.user_id?{...o,user_id:o.user_id,upload_status:o.upload_status,upload_progress:o.upload_progress||0,error_message:o.error_message||null,storage_path:o.storage_path||null,completed_at:o.completed_at||null}:null}catch(o){return l.error("Error creating upload session:",o),await p.logError(t,"file_upload",o instanceof Error?o.message:"Unknown upload error",o instanceof Error?o.stack:void 0,{fileName:e,fileSize:r,fileType:a},"error"),null}},async updateUploadProgress(t,e,r){try{if(!s)return!1;const a={upload_progress:Math.max(0,Math.min(100,e))};r&&(a.upload_status=r,r==="completed"&&(a.completed_at=new Date().toISOString()));const{error:o}=await s.from("file_upload_sessions").update(a).eq("id",t);return!o}catch(a){return l.error("Error updating upload progress:",a),!1}},async markUploadFailed(t,e){try{if(!s)return!1;const{error:r}=await s.from("file_upload_sessions").update({upload_status:"failed",error_message:e}).eq("id",t);return!r}catch(r){return l.error("Error marking upload as failed:",r),!1}}},b={reportError:async(t,e={})=>{const r=(t==null?void 0:t.message)||"Unknown error",a=t==null?void 0:t.stack,o=`${e.component||"unknown"}:${e.operation||"unknown"}:${r}`;if(!d.shouldLogError(o)){console.warn("Error logging rate limit exceeded for:",o);return}let n="unknown";r.includes("infinite recursion")?n="infinite_recursion":r.includes("auth")||r.includes("login")?n="authentication":r.includes("database")||r.includes("supabase")?n="database":r.includes("upload")||r.includes("file")?n="file_upload":r.includes("network")||r.includes("fetch")?n="network":(r.includes("memory")||r.includes("leak"))&&(n="memory_leak");let i="error";r.includes("critical")||r.includes("crash")?i="critical":r.includes("warn")&&(i="warning"),await p.logError(e.userId,n,r,a,{operation:e.operation,component:e.component,...e.metadata},i),l.error("Enhanced error reported:",{errorType:n,errorMessage:r,context:e,severity:i})}};export{E as activityService,b as enhancedErrorReporting,p as errorLoggingService,k as fileUploadTrackingService};
